install.packages("classInt")
install.packages("ggplot2")
install.packages("lattice")
install.packages("RColorBrewer")
install.packages("sf")
update.packages()
library(classInt)
library(ggplot2)
library(lattice)
library(RColorBrewer)
library(sf)
orstationc <- read.scv("orstationc.csv")
orstationc <- read.csv("orstationc.csv")
str(orstationc)
orotl_sf <- st_read("orotl.shp")
plot(orotl_sf)
plot(st_geometry(orotl_sf). exes=TRUE)
plot(st_geometry(orotl_sf). axes=TRUE)
plot(st_geometry(orotl_sf), axes=TRUE)
plotvals <-orstationc$pjan
plottitle <- "January Precipitation"
nclr <- 8
plotclr <- brewer.pal(nclr, "BuPu")
class <- classIntervals(plotvals, nclr, style="quantile")
colcode <- findColours(class, plotclr)
cutpts <-round(class$brks, digits=1)
str(class)
str(colcode)
plot(st_geometry(orotl_sf), axes=TRUE)
points(orstationc$lat, orstationc$lon, pch=16, col=colcode, cex=2)
points(orstationc$lon, orstationc$lat, pch=16, col=colcode, cex=2)
points(orstationc$lon, orstationc$lat, cex=2)
legend(x=-117, y=43.5, legend=names(attr(colcode, "table")),)
legend(x=-117, y=43.5, legend=names(attr(colcode, "table")), fill=attr(colcode, "palette", cex=1, bty="n"))
legend(x=-117, y=43.5, legend=names(attr(colcode, "table")), fill=attr(colcode, "palette"), cex=1, bty="n")
title(plottitle)
plot(st_geometry(orotl_sf), axes=TRUE)
plotvals <-orstationc$tjul
plottitle <- 'July Temperature'
nclr <- 8
plotclr <- rev(brewer.pal(nclr, "RdBu"))
class <- classIntervals(plotvals, nclr, style="quantile")
colcode <- findColours(class, plotclr)
cutpts <-round(class$brks, digits=1)
plot(st_geometry(orotl_sf), axes=TRUE)
points(orstationc$lon, orstationc$lat, pch=16, col=colcode, cex=2)
points(orstationc$lon, orstationc$lat, cex=2)
legend(x=-117, y=43.5, legend=names(attr(colcode, "table")), fill=attr(colcode, "palette", cex=1, bty="n"))
legend(x=-117, y=43.5, legend=names(attr(colcode, "table")), fill=attr(colcode, "palette", cex=1, bty="n"))legend(x=-117, y=43.5, legend=names(attr(colcode, "table")), fill=attr(colcode, "palette"), cex=1, bty="n")
legend(x=-117, y=43.5, legend=names(attr(colcode, "table")), fill=attr(colcode, "palette"), cex=1, bty="n")
title(plottitle)
attach(orstantc)
attach(orstationc)
coplot(tann ~ elev | lon * lat, number=5, overlap=.5, panel=function(x,y,...) {
panel.smooth(x, y, span=.8, iter=5,...)
abline(lm(y ~ x), col="blue")
})
pdf("coplot.pdf")
coplot(tann ~ elev | lon * lat, number=5, overlap=.5, panel=function(x,y,...) {
panel.smooth(x, y, span=.8, iter=5,...)
abline(lm(y ~ x), col="blue")
})
dev.off()
pdf("coplot.pdf")
coplot(tann ~ elev | lon * lat, number=10, overlap=.5, panel=function(x,y,...) {
panel.smooth(x, y, span=.8, iter=5,...)
abline(lm(y ~ x), col="blue")
})
dev.off()
pdf("coplot.pdf")
coplot(tann ~ elev | lon * lat, number=2, overlap=.5, panel=function(x,y,...) {
panel.smooth(x, y, span=.8, iter=5,...)
abline(lm(y ~ x), col="blue")
})
dev.off()
pdf("coplot.pdf")
coplot(tann ~ elev | lon * lat, number=6, overlap=.5, panel=function(x,y,...) {
panel.smooth(x, y, span=.8, iter=5,...)
abline(lm(y ~ x), col="blue")
})
dev.off()
coplot(tann ~ elev | lon * lat, number=6, overlap=.5, panel=function(x,y,...) {
})
coplot(tann ~ elev | lon * lat, number=4, overlap=0, panel=function(x,y,...) {
panel.smooth(x, y, span=.8, iter=5,...)
abline(lm(y ~ x), col="blue")
})
pdf("coplot.pdf")
coplot(tann ~ elev | lon * lat, number=4, overlap=0, panel=function(x,y,...) {
panel.smooth(x, y, span=.8, iter=5,...)
abline(lm(y ~ x), col="blue")
})
dev.off()
pdf("coplot.pdf")
coplot(tann ~ elev | lon * lat, number=4, overlap=-.5, panel=function(x,y,...) {
panel.smooth(x, y, span=.8, iter=5,...)
abline(lm(y ~ x), col="blue")
})
dev.off()
pdf("coplot.pdf")
coplot(tann ~ elev | lon * lat, number=4, overlap=-.05, panel=function(x,y,...) {
panel.smooth(x, y, span=.8, iter=5,...)
abline(lm(y ~ x), col="blue")
})
pdf("coplot.pdf")
coplot(tann ~ elev | lon * lat, number=4, overlap=.99, panel=function(x,y,...) {
panel.smooth(x, y, span=.8, iter=5,...)
abline(lm(y ~ x), col="blue")
})
dev.off()
detach(orstationc)
cirques <- read.csv("cirques.csv")
attach(cirques)
names(cirques)
cloud(Elev ~ lon*Lat, pch=16, cex=1.25, col=as.integer(Glacier)+1)
cloud(Elev ~ Lon*Lat, pch=16, cex=1.25, col=as.integer(Glacier)+1)
dev.off()
cloud(Elev ~ Lon*Lat, pch=16, cex=1.25, col=as.integer(Glacier)+1)
dev.new()
dev.on()
dev.new()
cloud(Elev ~ Lon*Lat, pch=16, cex=1.25, col=as.integer(Glacier)+1)
Lat2 <- equal.count(Lat, 4, .5)
Lon2 <- equal.count(Lon, 4, .5)
plot(Lat2)
plot(Lon2)
plot2 <- xyplot(Elev ~ Lon | Lat2, layout=c(4, 2), panel=function(x, y) {
panel.grid(v=2)
panel.xyplot(x, y)
panel.loess(x, y, span=.8, degree=1, family="gaussian")
panel.abline(lm(y~x))
},
xlab="Longitude",
ylab="Elevation (m)"
)
print(plot2)
plot3 <- xyplot(Elev ~ Lat | Lon2,
layout = c(4, 2),
panel = function(x, y) {
panel.grid(v=2)
panel.xyplot(x, y)
panel.loess(x, y, span = .8, degree = 1, family="gaussian")
panel.abline(lm(y~x))
},
xlab = "Latitude",
ylab = "Elevation (m)"
)
print(plot3)
plot4 <- stripplot(Glacier ~ Elev | Lat2*Lon2)
print(plot4)
plot5 <- bwplot(Glacier ~ Elev| Lat2*Lon2)
print(plot5)
pdf("coplot.pdf")
coplot(tann ~ elev | lon * lat, number=4, overlap=.5, panel=function(x,y,...) {
plot(Lat2)panel.smooth(x, y, span=.8, iter=5,...)
coplot(tann ~ elev | lon * lat, number=4, overlap=.5, panel=function(x,y,...) {
panel.smooth(x, y, span=.8, iter=5,...)
abline(lm(y ~ x), col="blue")
})
pdf("coplot.pdf")
plot(Lat2)panel.smooth(x, y, span=.8, iter=5,...)plot4 <- stripplot(Glacier ~ Elev | Lat2*Lon2)
plot4 <- stripplot(Glacier ~ Elev | Lat2*Lon2)
print(plot4)
dev.off()
